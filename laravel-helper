#! /bin/bash

e() {
    RED='\033[0;31m'
    GREEN='\033[0;32m'
    YELLOW='\033[0;33m'
    BLUE='\033[0;34m'
    NC='\033[0m'

    TXT_COLOR="${!2}"
    echo "${TXT_COLOR}$1${NC}"
}


help() {
    echo -e "$(e "### Help ###\n" "YELLOW")" 

    echo -e "$(e "d - Target directory (eg: -d /opt/my-laravel)" "YELLOW")"
    echo -e "$(e "u - Update code using git pull (defaults to master branch)" "YELLOW")"
    echo -e "$(e "i - Install dependencies using composer" "YELLOW")"
    echo -e "$(e "r - Refresh laravel instance and fix folder permission / ownership" "YELLOW")"
    echo -e "$(e "t - Output Laravel log file with specified line number (eg: -t 100 to output last 100 line)" "YELLOW")"
    echo -e "$(e "l - Output Laravel log file and append output as log file grow" "YELLOW")"

    exit 0
}

check_deploy_dir() {
    if [[ -z "${DEPLOY_DIR}" ]]; then
        read -p "Use current folder $PWD? [y/n] " YN

        if [[ $YN == "y" || $YN == "Y" ]]; then
            DEPLOY_DIR="$PWD"
        else
            echo -e "\nExiting..."
            exit 1
        fi
    else
        DEPLOY_DIR="${DEPLOY_DIR}"
    fi
}

update() {
    echo -e "$(e "Updating code in $DEPLOY_DIR\n" "YELLOW")" 
    git pull
}

install() {
    echo -e "$(e "Installing dependencies\n" "YELLOW")" 
    composer install
}

refresh() {
    echo -e "$(e "Refresh laravel instance\n" "YELLOW")" 
    composer dump-autoload && php artisan cache:clear && php artisan config:clear && php artisan view:clear && php artisan config:cache && php artisan queue:restart
    echo -e "$(e "Reset folder permissions\n" "YELLOW")" 
    chown -R www-data:www-data . && chmod -R 755 storage && chmod -R 755 bootstrap/cache
}

tail() {
    echo -e "$(e "Laravel log\n" "YELLOW")" 
    log="storage/logs/laravel-$(date +%Y-%m-%d).log"
    ls -l $log && tail -n $1 $log
}

tail_follow() {
    echo -e "$(e "Laravel log\n" "YELLOW")" 
    log="storage/logs/laravel-$(date +%Y-%m-%d).log"
    ls -l $log && tail -f $log
}


if [[ $# == 0 ]]; then
    help
fi

while getopts "hd:uirt:l" OPTION; do
    case $OPTION in
        h ) help ;;
        d ) DEPLOY_DIR="$OPTARG" ;;
    esac
done

OPTIND=1

check_deploy_dir

pushd $DEPLOY_DIR

while getopts "hd:uirt:l" OPTION; do
    case $OPTION in
    u ) update ;;
    i ) install ;;
    r ) refresh ;;
    t ) tail $OPTARG ;;
    l ) tail_follow ;;
    esac
done

popd
